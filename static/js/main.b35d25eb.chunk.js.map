{"version":3,"sources":["App.module.css","ContactForm/ContactForm.jsx","Filter/Filter.jsx","ContactList/ContactList.jsx","Section&Title&Container/Section.jsx","Section&Title&Container/MainContainer.styled.jsx","Section&Title&Container/MainContainer.jsx","App.jsx","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onGetUnicName","reset","className","css","containerForm","onSubmit","this","id","onChange","type","pattern","title","required","Component","Filter","ContactList","contacts","onDeleteContact","map","onClick","Section","children","MainContainer","styled","div","Title","h1","Container","App","filter","changeFilter","formSubmitHandler","data","todoData","uuidv4","prevState","getUnicName","isName","find","contact","toLowerCase","includes","length","alert","deleteContact","contactId","getVisibleContacts","normalizedFilter","visibleName","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b35d25eb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerForm\":\"App_containerForm__3lqJt\"};","import { Component } from 'react';\n// not this css\nimport css from '../App.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = event => {\n    const { name, number, value } = event.currentTarget;\n    this.setState({\n      // name: = [event.currentTarget.name]:\n      // [event.currentTarget.name]: event.currentTarget.value,\n      [name]: value,\n      [number]: value,\n    });\n    // console.log(event.currentTarget.value);\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    // console.log(this.state.name);\n    // this.formSubmitHandler(this.state.name,this.state.number);\n    this.props.onGetUnicName(this.state);\n    // old code\n    // this.props.onFormSubmitHandler(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    return (\n        <form className={css.containerForm} onSubmit={this.handleSubmit}>\n          <label id={this.name}>\n            <p>Name</p>\n            <input\n              value={this.state.name}\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n            />\n          </label>\n          <label id={this.name}>\n            <p>Number</p>\n            <input\n              value={this.state.number}\n              onChange={this.handleChange}\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n            />\n          </label>\n\n          <button type=\"submit\">Add contact</button>\n        </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","const Filter = ({ value, onChange }) => (\n  <label id={{ value }}>\n    <p>Find contacts by name</p>\n    <input value={value} onChange={onChange} type=\"text\" name=\"filter\" />\n  </label>\n);\n\nexport default Filter;\n","const ContactList = ({ contacts, onDeleteContact }) => (\n  <ul>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id}>\n        <span>{name}</span>: <span>{number}</span>\n        <span>\n          <button type=\"button\" onClick={() => onDeleteContact(id)}>\n            delete\n          </button>\n        </span>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default ContactList;\n","const Section = ({ title, children}) => (\n    \n    <div>\n    <h2>{title}</h2>\n        {children}\n    </div>\n);\n\nexport default Section;\n","import styled from \"@emotion/styled\";\r\n\r\nexport const MainContainer = styled.div`\r\n  display: block;\r\n  width: 300px;\r\n  margin:10px;\r\n  padding: 10px;\r\n  border: 1px solid black;\r\n  border-radius: 5px;\r\n  box-shadow: 1px 1px 1px black;\r\n  background: rgb(217 196 196);\r\n`;\r\n\r\nexport const Title = styled.h1`\r\ntext-align: center;\r\n`;","import { MainContainer, Title } from \"./MainContainer.styled\";\r\n\r\nconst Container = ({ children, title }) => (\r\n    \r\n    <MainContainer>\r\n       <Title>{title}</Title> \r\n        {children}\r\n    </MainContainer>\r\n);\r\n\r\nexport default Container;","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n// import css from './App.module.css';\n\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport ContactList from './ContactList/ContactList';\nimport Section from './Section&Title&Container/Section';\nimport Container from './Section&Title&Container/MainContainer';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  formSubmitHandler = data => {\n    const todoData = {\n      name: data.name,\n      number: data.number,\n      id: uuidv4(),\n    };\n\n    this.setState(prevState => ({\n      contacts: [todoData, ...prevState.contacts],\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  // if i have this name, I dont update state\n  getUnicName = data => {\n    const { contacts } = this.state;\n    const isName = contacts.find(contact =>\n      contact.name.toLowerCase().includes(data.name.toLowerCase()),\n    );\n\n    if (isName && isName.name.length === data.name.length) {\n      alert(`${data.name} is already in contacts`);\n      return;\n    } else {\n      this.formSubmitHandler(data);\n    }\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  // finnd contact to includ word with filter\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n  // this for me... I dont understant patern and I nead coment...\n  // const normalizedFilter = this.state.filter.toLowerCase();\n  //   const visibleName = this.state.contacts.filter(contact =>\n  //     contact.name.toLowerCase().includes(normalizedFilter),\n  //   );\n\n  render() {\n    const visibleName = this.getVisibleContacts();\n    return (\n      <Container title=\"Phonebook\">\n        <Section>\n        <ContactForm\n          onGetUnicName={this.getUnicName}\n          onChange={this.handleChange}\n        />\n        </Section>\n\n        <Section title=\"Contacts\">\n          <Filter onChange={this.changeFilter} value={this.state.filter} />\n          <ContactList\n            contacts={visibleName}\n            onDeleteContact={this.deleteContact}\n          />\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals()/\n"],"sourceRoot":""}