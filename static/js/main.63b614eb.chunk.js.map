{"version":3,"sources":["App.jsx","index.js","App.module.css"],"names":["App","state","contacts","id","name","number","filter","handleChange","event","currentTarget","value","setState","console","log","handleSubmit","preventDefault","formSubmitHandler","reset","data","todoData","uuidv4","prevState","getVisibleContacts","normalizedFilter","toLowerCase","contact","includes","visibleName","this","className","css","containerApp","containerForm","onSubmit","onChange","type","pattern","title","required","map","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iSAuIeA,E,4MAlIbC,MAAQ,CACNC,SAAU,CACR,CAAEC,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEF,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,cAEhDD,KAAM,GACNC,OAAQ,GACRC,OAAQ,I,EAGVC,aAAe,SAAAC,GAAU,IAAD,EACtB,EAAwCA,EAAMC,cAAtCL,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAAQC,EAAtB,EAAsBA,OAAQI,EAA9B,EAA8BA,MAC9B,EAAKC,UAAL,mBAGGP,EAAOM,GAHV,cAIGL,EAASK,GAJZ,cAKGJ,EAASI,GALZ,IAOAE,QAAQC,IAAIL,EAAMC,cAAcC,Q,EAGlCI,aAAe,SAAAN,GACbA,EAAMO,iBAGN,EAAKC,kBAAkB,EAAKf,OAC5B,EAAKgB,S,EAGPD,kBAAoB,SAAAE,GAClBN,QAAQC,IAAIK,GACZ,IAAMC,EAAW,CACff,KAAMc,EAAKd,KACXC,OAAQa,EAAKb,OACbF,GAAIiB,eAENR,QAAQC,IAAIM,GAEZ,EAAKR,UAAS,SAAAU,GAAS,MAAK,CAC1BnB,SAAS,CAAEiB,GAAH,mBAAgBE,EAAUnB,gB,EAItCe,MAAQ,WACN,EAAKN,SAAS,CACZP,KAAM,GACNC,OAAQ,M,EAKZiB,mBAAqB,WACnB,MAA0B,EAAKrB,MAAxBK,EAAP,EAAOA,OAAQJ,EAAf,EAAeA,SACTqB,EAAmBjB,EAAOkB,cAChC,OAAOtB,EAASI,QAAO,SAAAmB,GAAO,OAC5BA,EAAQrB,KAAKoB,cAAcE,SAASH,O,4CASxC,WACE,IAAMI,EAAcC,KAAKN,qBAEzB,OADAV,QAAQC,IAAIc,GAEV,sBAAKE,UAAWC,IAAIC,aAApB,UACE,0CACA,8BACE,uBAAMF,UAAWC,IAAIE,cAAeC,SAAUL,KAAKd,aAAnD,UACE,wBAAOX,GAAIyB,KAAKxB,KAAhB,UACE,qCACA,uBACEM,MAAOkB,KAAK3B,MAAMG,KAClB8B,SAAUN,KAAKrB,aACf4B,KAAK,OACL/B,KAAK,OACLgC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,wBAAOnC,GAAIyB,KAAKxB,KAAhB,UACE,uCACA,uBACEM,MAAOkB,KAAK3B,MAAMI,OAClB6B,SAAUN,KAAKrB,aACf4B,KAAK,MACL/B,KAAK,SACLgC,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAIZ,wBAAQH,KAAK,SAAb,8BAIJ,gCACE,yCAEA,wBAAOhC,GAAIyB,KAAKxB,KAAhB,UACE,sDACA,uBACEM,MAAOkB,KAAK3B,MAAMK,OAClB4B,SAAUN,KAAKrB,aACf4B,KAAK,OACL/B,KAAK,cAIT,6BACGuB,EAAYY,KAAI,SAAAd,GAAO,OACtB,+BACE,+BAAOA,EAAQrB,OADjB,KAC+B,+BAAOqB,EAAQpB,WADrCoB,EAAQtB,mB,GAxHbqC,aCElBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,aAAe,0BAA0B,cAAgB,8B","file":"static/js/main.63b614eb.chunk.js","sourcesContent":["import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport css from './App.module.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    name: '',\n    number: '',\n    filter: '',\n  };\n\n  handleChange = event => {\n    const { name, number, filter, value } = event.currentTarget;\n    this.setState({\n      // name: = [event.currentTarget.name]:\n      // [event.currentTarget.name]: event.currentTarget.value,\n      [name]: value,\n      [number]: value,\n      [filter]: value,\n    });\n    console.log(event.currentTarget.value);\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    // console.log(this.state.name);\n    // this.formSubmitHandler(this.state.name,this.state.number);\n    this.formSubmitHandler(this.state);\n    this.reset();\n  };\n\n  formSubmitHandler = data => {\n    console.log(data);\n    const todoData = {\n      name: data.name,\n      number: data.number,\n      id: uuidv4(),\n    };\n    console.log(todoData);\n\n    this.setState(prevState => ({\n      contacts: [todoData, ...prevState.contacts],\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n      // filter: '',\n    });\n  };\n\n  getVisibleContacts = () => {\n    const {filter, contacts}= this.state\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  }\n\n  // const normalizedFilter = this.state.filter.toLowerCase();\n  //   const visibleName = this.state.contacts.filter(contact =>\n  //     contact.name.toLowerCase().includes(normalizedFilter),\n  //   );\n\n  render() {\n    const visibleName = this.getVisibleContacts();\n    console.log(visibleName);\n    return (\n      <div className={css.containerApp}>\n        <p>Phonebook</p>\n        <div>\n          <form className={css.containerForm} onSubmit={this.handleSubmit}>\n            <label id={this.name}>\n              <p>Name</p>\n              <input\n                value={this.state.name}\n                onChange={this.handleChange}\n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                required\n              />\n            </label>\n            <label id={this.name}>\n              <p>Number</p>\n              <input\n                value={this.state.number}\n                onChange={this.handleChange}\n                type=\"tel\"\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                required\n              />\n            </label>\n\n            <button type=\"submit\">Add contact</button>\n          </form>\n        </div>\n\n        <div>\n          <p>Contacts</p>\n\n          <label id={this.name}>\n            <p>Find contacts by name</p>\n            <input\n              value={this.state.filter}\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"filter\"\n            />\n          </label>\n\n          <ul>\n            {visibleName.map(contact => (\n              <li key={contact.id}>\n                <span>{contact.name}</span>: <span>{contact.number}</span>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals()/\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerApp\":\"App_containerApp__2q0vW\",\"containerForm\":\"App_containerForm__3lqJt\"};"],"sourceRoot":""}