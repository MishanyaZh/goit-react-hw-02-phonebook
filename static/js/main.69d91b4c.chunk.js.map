{"version":3,"sources":["ContactForm/ContactForm.jsx","Filter/Filter.jsx","ContactList/ContactList.jsx","SectionTitle/SectionTitle.jsx","App.jsx","index.js","App.module.css"],"names":["ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onGetUnicName","reset","className","css","containerForm","onSubmit","this","id","onChange","type","pattern","title","required","Component","Filter","ContactList","contacts","onDeleteContact","map","onClick","SectionTitle","App","filter","changeFilter","formSubmitHandler","data","todoData","uuidv4","prevState","getUnicName","isName","find","contact","toLowerCase","includes","length","alert","deleteContact","contactId","getVisibleContacts","normalizedFilter","visibleName","containerApp","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.69d91b4c.chunk.js","sourcesContent":["import { Component } from 'react';\n// not this css\nimport css from '../App.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = event => {\n    const { name, number, value } = event.currentTarget;\n    this.setState({\n      // name: = [event.currentTarget.name]:\n      // [event.currentTarget.name]: event.currentTarget.value,\n      [name]: value,\n      [number]: value,\n    });\n    // console.log(event.currentTarget.value);\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    // console.log(this.state.name);\n    // this.formSubmitHandler(this.state.name,this.state.number);\n    this.props.onGetUnicName(this.state);\n    // old code\n    // this.props.onFormSubmitHandler(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <form className={css.containerForm} onSubmit={this.handleSubmit}>\n          <label id={this.name}>\n            <p>Name</p>\n            <input\n              value={this.state.name}\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n            />\n          </label>\n          <label id={this.name}>\n            <p>Number</p>\n            <input\n              value={this.state.number}\n              onChange={this.handleChange}\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n            />\n          </label>\n\n          <button type=\"submit\">Add contact</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ContactForm;\n","const Filter = ({ value, onChange }) => (\n  <label id={{ value }}>\n    <p>Find contacts by name</p>\n    <input value={value} onChange={onChange} type=\"text\" name=\"filter\" />\n  </label>\n);\n\nexport default Filter;\n","const ContactList = ({ contacts,onDeleteContact }) => (\n  <ul>\n    {contacts.map(({id,name,number}) => (\n      <li key={id}>\n            <span>{name}</span>: <span>{number}</span>\n            <span>\n                <button\n                type=\"button\"\n                onClick={()=>onDeleteContact(id)}>delete\n                </button>\n            </span>\n        </li>\n    ))}\n  </ul>\n);\n\nexport default ContactList;\n","const SectionTitle = ({ title }) => <h1>{title}</h1>;\n\nexport default SectionTitle;\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport css from './App.module.css';\n\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport ContactList from './ContactList/ContactList';\nimport SectionTitle from './SectionTitle/SectionTitle';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  formSubmitHandler = data => {\n    const todoData = {\n      name: data.name,\n      number: data.number,\n      id: uuidv4(),\n    };\n\n    this.setState(prevState => ({\n      contacts: [todoData, ...prevState.contacts],\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  // if i have this name, I dont update state\n  getUnicName = data => {\n    const { contacts } = this.state;\n    const isName = contacts.find(contact =>\n      contact.name.toLowerCase().includes(data.name.toLowerCase()),\n    );\n\n    if (isName && isName.name.length === data.name.length) {\n      alert(`${data.name} is already in contacts`);\n      return;\n    } else {\n      this.formSubmitHandler(data);\n    }\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  // finnd contact to includ word with filter\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n  // this for me... I dont understant patern and I nead coment...\n  // const normalizedFilter = this.state.filter.toLowerCase();\n  //   const visibleName = this.state.contacts.filter(contact =>\n  //     contact.name.toLowerCase().includes(normalizedFilter),\n  //   );\n\n  render() {\n    const visibleName = this.getVisibleContacts();\n    // console.log(visibleName);\n    return (\n      <div className={css.containerApp}>\n        {/* <h1>Phonebook</h1> */}\n        <SectionTitle title=\"Phonebook\" />\n        <ContactForm\n          // onFormSubmitHandler={this.formSubmitHandler}\n          onGetUnicName={this.getUnicName}\n          onChange={this.handleChange}\n        />\n\n        {/* <h2>Contacts</h2> */}\n        <SectionTitle title=\"Contacts\" />\n        <div>\n          <Filter onChange={this.changeFilter} value={this.state.filter} />\n          <ContactList contacts={visibleName}\n            onDeleteContact={ this.deleteContact}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals()/\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerApp\":\"App_containerApp__2q0vW\",\"containerForm\":\"App_containerForm__3lqJt\"};"],"sourceRoot":""}