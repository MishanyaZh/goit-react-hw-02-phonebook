{"version":3,"sources":["App.jsx","index.js","App.module.css"],"names":["App","state","contacts","name","number","handleChange","event","currentTarget","value","setState","console","log","handleSubmit","preventDefault","formSubmitHandler","reset","data","todoData","id","uuidv4","prevState","className","css","containerApp","containerForm","onSubmit","this","onChange","type","pattern","title","required","map","contact","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iSAwGeA,E,4MAnGbC,MAAQ,CACNC,SAAU,GACVC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAAAC,GAAU,IAAD,EACtB,EAAgCA,EAAMC,cAA9BJ,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAAQI,EAAtB,EAAsBA,MACtB,EAAKC,UAAL,mBAGGN,EAAOK,GAHV,cAIGJ,EAASI,GAJZ,IAMAE,QAAQC,IAAIL,EAAMC,cAAcC,Q,EAGlCI,aAAe,SAAAN,GACbA,EAAMO,iBAGN,EAAKC,kBAAkB,EAAKb,OAC5B,EAAKc,S,EAIPD,kBAAoB,SAAAE,GAClBN,QAAQC,IAAIK,GACZ,IAAMC,EAAW,CACfd,KAAMa,EAAKb,KACXC,OAAQY,EAAKZ,OACbc,GAAIC,eAENT,QAAQC,IAAIM,GAEZ,EAAKR,UAAS,SAAAW,GAAS,MAAK,CAC1BlB,SAAS,CAAEe,GAAH,mBAAgBG,EAAUlB,gB,EAKtCa,MAAQ,WACN,EAAKN,SAAS,CACZN,KAAM,GACNC,OAAQ,M,4CAMZ,WACE,OACE,sBAAKiB,UAAWC,IAAIC,aAApB,UACE,0CACA,8BACE,uBAAMF,UAAWC,IAAIE,cAAeC,SAAUC,KAAKd,aAAnD,UACE,wBAAOM,GAAIQ,KAAKvB,KAAhB,UACE,qCACA,uBACEK,MAAOkB,KAAKzB,MAAME,KAClBwB,SAAUD,KAAKrB,aACfuB,KAAK,OACLzB,KAAK,OACL0B,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,wBAAOb,GAAIQ,KAAKvB,KAAhB,UACE,uCACA,uBACEK,MAAOkB,KAAKzB,MAAMG,OAClBuB,SAAUD,KAAKrB,aACfuB,KAAK,MACLzB,KAAK,SACL0B,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAIZ,wBAAQH,KAAK,SAAb,8BAIJ,gCACE,yCAEA,6BACGF,KAAKzB,MAAMC,SAAS8B,KAAI,SAAAC,GAAO,OAC9B,+BAAqB,+BAAOA,EAAQ9B,OAApC,KAAkD,+BAAO8B,EAAQ7B,WAAxD6B,EAAQf,mB,GA3FbgB,aCElBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,aAAe,0BAA0B,cAAgB,8B","file":"static/js/main.be75aa3b.chunk.js","sourcesContent":["import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport css from './App.module.css';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    name: '',\n    number: '',\n  };\n\n  handleChange = event => {\n    const { name, number, value } = event.currentTarget;\n    this.setState({\n      // name: = [event.currentTarget.name]:\n      // [event.currentTarget.name]: event.currentTarget.value,\n      [name]: value,\n      [number]: value,\n    });\n    console.log(event.currentTarget.value);\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    // console.log(this.state.name);\n    // this.formSubmitHandler(this.state.name,this.state.number);\n    this.formSubmitHandler(this.state);\n    this.reset();\n    ;\n  };\n\n  formSubmitHandler = data => {\n    console.log(data);\n    const todoData = {\n      name: data.name,\n      number: data.number,\n      id: uuidv4(),\n    };\n    console.log(todoData);\n\n    this.setState(prevState => ({\n      contacts: [todoData, ...prevState.contacts],\n    }));\n\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n \n\n  render() {\n    return (\n      <div className={css.containerApp}>\n        <p>Phonebook</p>\n        <div>\n          <form className={css.containerForm} onSubmit={this.handleSubmit}>\n            <label id={this.name}>\n              <p>Name</p>\n              <input\n                value={this.state.name}\n                onChange={this.handleChange}\n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                required\n              />\n            </label>\n            <label id={this.name}>\n              <p>Number</p>\n              <input\n                value={this.state.number}\n                onChange={this.handleChange}\n                type=\"tel\"\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                required\n              />\n            </label>\n             \n            <button type=\"submit\">Add contact</button>\n          </form>\n        </div>\n\n        <div>\n          <p>Contacts</p>\n          \n          <ul>\n            {this.state.contacts.map(contact => (\n              <li key={contact.id}><span>{contact.name}</span>: <span>{contact.number}</span></li>\n          ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals()/\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerApp\":\"App_containerApp__2q0vW\",\"containerForm\":\"App_containerForm__3lqJt\"};"],"sourceRoot":""}