{"version":3,"sources":["ContactForm/ContactForm.jsx","Filter/Filter.jsx","ContactList/ContactList.jsx","SectionTitle/SectionTitle.jsx","App.jsx","index.js","App.module.css"],"names":["ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onGetUnicName","reset","className","css","containerForm","onSubmit","this","id","onChange","type","pattern","title","required","Component","Filter","ContactList","contacts","map","contact","SectionTitle","App","filter","changeFilter","formSubmitHandler","data","todoData","uuidv4","prevState","getUnicName","isName","find","toLowerCase","includes","length","alert","getVisibleContacts","normalizedFilter","visibleName","containerApp","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.5ef2befb.chunk.js","sourcesContent":["import { Component } from \"react\";\r\n// not this css\r\nimport css from '../App.module.css'\r\n\r\n\r\nclass ContactForm extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    };\r\n\r\n    handleChange = event => {\r\n    const { name, number, value } = event.currentTarget;\r\n    this.setState({\r\n      // name: = [event.currentTarget.name]:\r\n      // [event.currentTarget.name]: event.currentTarget.value,\r\n      [name]: value,\r\n      [number]: value,\r\n    });\r\n    // console.log(event.currentTarget.value);\r\n  };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        // console.log(this.state.name);\r\n        // this.formSubmitHandler(this.state.name,this.state.number);\r\n        this.props.onGetUnicName(this.state);\r\n        // old code\r\n        // this.props.onFormSubmitHandler(this.state);\r\n        this.reset();\r\n    };\r\n    \r\n     reset = () => {\r\n        this.setState({\r\n            name: '',\r\n            number: '',\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n        <form className={css.containerForm} onSubmit={this.handleSubmit}>\r\n            <label id={this.name}>\r\n                <p>Name</p>\r\n                <input\r\n                value={this.state.name}\r\n                onChange={this.handleChange}\r\n                type=\"text\"\r\n                name=\"name\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                required\r\n                />\r\n            </label>\r\n            <label id={this.name}>\r\n                <p>Number</p>\r\n                <input\r\n                value={this.state.number}\r\n                onChange={this.handleChange}\r\n                type=\"tel\"\r\n                name=\"number\"\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                required\r\n                />\r\n            </label>\r\n\r\n            <button type=\"submit\">Add contact</button>\r\n        \r\n        </form>\r\n        </div>  \r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactForm","\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n    <label id={{value}}>\r\n        <p>Find contacts by name</p>\r\n            <input\r\n            value={value}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            />\r\n    </label>\r\n)\r\n\r\nexport default Filter","\r\n\r\nconst ContactList = ({contacts}) => (\r\n    <ul>\r\n        {contacts.map(contact => (\r\n            <li key={contact.id}>\r\n            <span>{contact.name}</span>: <span>{contact.number}</span>\r\n            </li>\r\n        ))}\r\n        \r\n    </ul>\r\n)\r\n\r\nexport default ContactList","\r\n\r\nconst SectionTitle = ({title}) => (\r\n    <h1>{title}</h1>\r\n)\r\n\r\nexport default  SectionTitle","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport css from './App.module.css';\n\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport ContactList from './ContactList/ContactList';\nimport SectionTitle from './SectionTitle/SectionTitle';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  formSubmitHandler = data => {\n    const todoData = {\n      name: data.name,\n      number: data.number,\n      id: uuidv4(),\n    };\n    \n    this.setState( prevState => ({\n      contacts: [todoData, ...prevState.contacts],\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  // if i have this name, I dont update state\n  getUnicName = data => {\n    const { contacts } = this.state\n    const isName = contacts.find(contact => contact.name.toLowerCase().includes(data.name.toLowerCase()))\n\n    if (isName&&isName.name.length===data.name.length) {\n      alert(`${data.name} is already in contacts`)\n      return;\n    } else {\n      this.formSubmitHandler(data);\n    }\n  }\n// finnd contact to includ word with filter\n  getVisibleContacts = () => {\n    const {filter, contacts}= this.state\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  }\n// this for me, I dont understant patern and I nead coment...\n  // const normalizedFilter = this.state.filter.toLowerCase();\n  //   const visibleName = this.state.contacts.filter(contact =>\n  //     contact.name.toLowerCase().includes(normalizedFilter),\n  //   );\n\n  render() {\n    const visibleName = this.getVisibleContacts();\n    // console.log(visibleName);\n    return (\n\n      <div className={css.containerApp}>\n\n        {/* <h1>Phonebook</h1> */}\n        <SectionTitle title=\"Phonebook\"/>\n        <ContactForm\n          // onFormSubmitHandler={this.formSubmitHandler}\n          onGetUnicName ={this.getUnicName}\n          onChange={this.handleChange}\n        />\n        \n        {/* <h2>Contacts</h2> */}\n        <SectionTitle title=\"Contacts\"/>\n        <div>\n          <Filter\n            onChange={this.changeFilter}\n            value={this.state.filter}\n          />\n          <ContactList contacts={visibleName}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals()/\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerApp\":\"App_containerApp__2q0vW\",\"containerForm\":\"App_containerForm__3lqJt\"};"],"sourceRoot":""}